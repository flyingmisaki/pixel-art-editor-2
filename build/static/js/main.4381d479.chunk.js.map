{"version":3,"sources":["core/Layer.js","hooks/useLayers.js","hooks/useProjectSettings.js","hooks/useHistory.js","components/ToolBox/UndoButtons/UndoButtons.jsx","components/common/OptionWindow/OptionWindow.jsx","core/utils/colors.js","components/common/ColoredSquare/ColoredSquare.jsx","core/tools/ColorPicker.js","hooks/useBrushColor.js","core/tools/Brush.js","hooks/useActiveTool.js","components/ToolBox/ToolOptions/ColorMenu/ColorMenu.jsx","components/ToolBox/ToolOptions/RecentColors/RecentColors.jsx","components/ToolBox/ToolOptions/StrokeOptions/StrokeOptions.jsx","components/ToolBox/ToolOptions/ToolOptions.jsx","core/tools/Line.js","core/tools/Rectangle.js","core/tools/Circle.js","core/tools/Fill.js","core/tools/Eraser.js","core/tools/Triangle.js","components/ToolBox/ToolBox.jsx","core/utils/canvas.js","components/ProjectOptions/LayersPanel/LayerPreview/LayerPreview.jsx","components/ProjectOptions/LayersPanel/LayersPanel.jsx","components/ProjectOptions/ExportPanel/ExportPanel.jsx","components/ProjectOptions/SettingsPanel/SettingsPanel.jsx","components/ProjectOptions/ProjectOptions.jsx","components/Workspace/PixelCanvas/CanvasLayer/CanvasLayer.jsx","components/Workspace/PixelCanvas/PreviewLayer/PreviewLayer.jsx","core/utils/coordinates.js","components/Workspace/PixelCanvas/PixelCanvas.jsx","components/Workspace/Workspace.jsx","components/StatusBar/StatusBar.jsx","App.jsx","index.jsx"],"names":["Layer","name","this","id","shortId","canvasRef","isVisible","isLocked","listeners","width","height","onUpdate","forEach","listener","push","filter","l","LayersContext","createContext","useLayers","useContext","LayersProvider","props","useState","layers","setLayers","activeLayer","setActiveLayer","layersAddedTotalRef","useRef","addLayer","layerIndex","current","layerName","layer","newLayers","useEffect","layersData","removeLayer","indexOf","length","Provider","value","children","ProjectSettingsContext","useProjectSettings","ProjectSettingsProvider","x","y","canvasCursorPosition","setCanvasCursorPosition","previewLayerCanvasRef","setWidth","setHeight","scale","setScale","canvasX","setCanvasX","projectSettingsData","canvasY","setCanvasY","HistoryEntry","map","LayerData","imageData","toDataURL","metaData","restoreLayerFromData","layerData","Object","assign","canvasElement","Promise","resolve","reject","canvasElementContext","getContext","image","Image","src","onload","drawImage","restoreCanvasFromLayerData","then","HistoryContext","useHistory","HistoryProvider","historyStack","setHistoryStack","currentHistoryIndex","setCurrentHistoryIndex","canUndo","canRedo","layerToRestoreRef","restoreLayers","entry","some","clearRect","layerToRestore","find","blankLayer","historyData","undo","lastEntry","redo","nextEntry","pushEntryToHistory","previousEntries","slice","newHistoryStack","clearHistory","UndoButtons","className","onClick","OptionWindow","title","onExpand","onCollapse","expanded","setExpanded","collapse","expand","style","display","colorToCanvasColor","color","r","g","b","a","colorsEqual","color1","color2","ColoredSquare","background","usesColors","canvasContext","options","status","onStatusChange","position","pixelData","getImageData","data","toFixed","getColor","updateStatus","BrushColorContext","DEFAULT_COLOR","useBrushColor","BrushColorProvider","brushColor","setBrushColor","colorHistory","setColorHistory","colorPickerColor","setColorPickerColor","brushColorData","pushColorToHistory","colorToAdd","filteredHistory","newColorHistory","previewCanvasContext","AA","replace","drawing","previousPosition","context","startPosition","endPosition","fillStyle","deltaX","Math","abs","deltaY","slopeX","slopeY","deltaError","currentPosition","fillRect","e2","drawPixel","plotLine","ActiveToolContext","useActiveTool","defaultTool","activeTool","setActiveTool","toolStatus","undefined","ActiveToolProvider","Brush","setToolStatus","ColorMenu","ColorPicker","onChange","rgb","RecentColors","renderRecentColor","index","StrokeOptions","type","event","target","htmlFor","ToolOptions","isDrawing","p1","p2","p3","p4","plotRectangle","radius","err","plotCircle","plotShape","shape","maxWidth","maxHeight","oldColor","newColor","canvas","adjacentPosition","floodFill","colorToBeFilled","erasePixel","ceil","console","log","plotTriangle","ToolBox","tools","Eraser","Line","Triangle","Rectangle","Circle","Fill","renderToolButton","tool","renderIcon","useColorPicker","renderColorPicker","active","copyCanvasContents","sourceCanvas","destinationCanvas","clear","destinationContext","LayerPreview","onDelete","previewCanvasRef","visible","setVisible","lock","setLock","setName","isActive","layerClassName","layerCanvas","previewCanvas","updatePreview","addUpdateListener","removeUpdateListener","lockedClassName","ref","stopPropagation","toggleVisibility","e","toggleLock","LayersPanel","layerAddedOrDeletedRef","onAddLayer","onDeleteLayer","reverse","ExportPanel","exportCanvasRef","exportImage","imageUrl","saveAs","generateExportPreview","exportPreviewCanvas","SettingsPanel","parseInt","ProjectOptions","CanvasLayer","canvasLayerRef","render","PreviewLayer","getCanvasRelativePosition","mouseEvent","mouseX","offsetX","mouseY","offsetY","floor","PixelCanvas","pixelCanvasRef","previousMousePositionRef","pixelCanvasElement","layerCanvasContext","handleMouseDown","clickCode","button","mouseDown","handleMouseUp","colorPicker","mouseUp","handleMouseMove","mouseMove","addEventListener","removeEventListener","elementHeight","canvasStyle","Workspace","workspaceRef","handleMouseWheel","buttons","movementX","movementY","handleKeys","document","activeElement","tagName","key","window","which","keyCode","ctrl","ctrlKey","shift","shiftKey","meta","metaKey","workspaceElement","left","top","StatusBar","App","isHistoryInitialised","preventDefault","Helmet","content","AppWithContext","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4381d479.chunk.js","sourcesContent":["import * as shortId from \"shortid\"\r\n\r\nconst DEFAULT_WIDTH = 16\r\nconst DEFAULT_HEIGHT = 16\r\n\r\nclass Layer {\r\n    constructor(name = null) {\r\n        this.id = shortId.generate()\r\n        this.name = name\r\n        this.canvasRef = null // Reference to the actual canvas element it needs for drawing\r\n        \r\n        this.isVisible = true\r\n        this.isLocked = false\r\n        \r\n        this.listeners = []\r\n        \r\n        this.width = DEFAULT_WIDTH\r\n        this.height = DEFAULT_HEIGHT\r\n    }\r\n\r\n    setName(name) {\r\n        this.name = name\r\n        this.onUpdate()\r\n    }\r\n\r\n    onUpdate() {\r\n        // console.log(`Layer updated (id = ${this.id})`)\r\n        this.listeners.forEach(listener => listener())\r\n    }\r\n\r\n    addUpdateListener(listener) {\r\n        this.listeners.push(listener)\r\n    }\r\n\r\n    removeUpdateListener(listener) {\r\n        this.listeners = this.listeners.filter((l) => l !== listener)\r\n    }\r\n\r\n    toggleVisibility() {\r\n        this.isVisible = !this.isVisible\r\n        // console.log(\"Visibility =\", this.isVisible)\r\n        this.onUpdate()\r\n    }\r\n\r\n    toggleLock() {\r\n        this.isLocked = !this.isLocked\r\n        // console.log(\"Locked =\", this.isLocked)\r\n        this.onUpdate()\r\n    }\r\n}\r\n\r\nexport default Layer","import React, {useState, useContext, createContext, useRef, useEffect} from \"react\"\r\nimport Layer from \"../core/Layer\"\r\n\r\nconst LayersContext = createContext()\r\n\r\nexport function useLayers(){\r\n    return useContext(LayersContext)\r\n}\r\n\r\nexport function LayersProvider(props){\r\n    const [layers, setLayers] = useState([])\r\n    const [activeLayer, setActiveLayer] = useState(null)\r\n\r\n    const layersAddedTotalRef = useRef(0)\r\n\r\n    const addLayer = function() {\r\n        const layerIndex = layersAddedTotalRef.current\r\n        const layerName = `Layer ${layerIndex}`\r\n\r\n        const layer = new Layer(layerName)\r\n\r\n        const newLayers = [...layers, layer]\r\n\r\n        layersAddedTotalRef.current += 1\r\n\r\n        // Sets the added layer as the active layer\r\n        setActiveLayer(layer)\r\n\r\n        setLayers(newLayers)\r\n\r\n        return layer\r\n\r\n        // console.log(`Added layer (id = ${layer.id})`)\r\n    }\r\n\r\n    const removeLayer = function(layer) {\r\n        if (!layer || layer.isLocked) return\r\n        \r\n        if (layer.id === activeLayer?.id) {\r\n            const layerIndex = layers.indexOf(layer)\r\n            \r\n            if (layers.length === 1) {\r\n                setActiveLayer(null)\r\n            }\r\n            else if (layerIndex === 0) {\r\n                setActiveLayer(layers[layerIndex + 1])\r\n            }\r\n            else {\r\n                setActiveLayer(layers[layerIndex - 1])\r\n            }\r\n        }\r\n        \r\n        layer.listeners = []\r\n        const newLayers = layers.filter(l => l.id !== layer.id)\r\n        setLayers(newLayers)\r\n        // console.log(`Deleted layer (index = ${layers.indexOf(layer)}, id = ${layer.id})`)\r\n    }\r\n\r\n    // Layers gets stuck as empty list in closure, but only runs once so its fine\r\n    // eslint-disable-next-line\r\n    useEffect(addLayer, [])\r\n\r\n    const layersData = {\r\n        layers,\r\n        activeLayer,\r\n        setLayers,\r\n        addLayer,\r\n        removeLayer,\r\n        setActiveLayer,\r\n    }\r\n\r\n    return (\r\n        <LayersContext.Provider value={layersData}>\r\n            {props.children}\r\n        </LayersContext.Provider>\r\n    )\r\n}","import React, { useState, useContext, createContext, useRef } from \"react\"\r\n\r\nconst ProjectSettingsContext = createContext()\r\n\r\nexport function useProjectSettings() {\r\n    return useContext(ProjectSettingsContext)\r\n}\r\n\r\nexport function ProjectSettingsProvider(props) {\r\n    const [canvasCursorPosition, setCanvasCursorPosition] = useState({x: null, y: null})\r\n    const previewLayerCanvasRef = useRef(null)\r\n    const [width, setWidth] = useState(32)\r\n    const [height, setHeight] = useState(32)\r\n    const [scale, setScale] = useState(25)\r\n    const [canvasX, setCanvasX] = useState(0)\r\n    const [canvasY, setCanvasY] = useState(0)\r\n\r\n    const projectSettingsData = {\r\n        canvasCursorPosition, setCanvasCursorPosition,\r\n        previewLayerCanvasRef,\r\n        width, setWidth,\r\n        height, setHeight,\r\n        scale, setScale,\r\n        canvasX, setCanvasX,\r\n        canvasY, setCanvasY\r\n    }\r\n\r\n    return (\r\n        <ProjectSettingsContext.Provider value={projectSettingsData}>\r\n            {props.children}\r\n        </ProjectSettingsContext.Provider>\r\n    )\r\n}","import React, { createContext, useState, useContext, useRef } from \"react\"\r\nimport { useLayers } from \"./useLayers\"\r\nimport { useProjectSettings } from \"./useProjectSettings\"\r\n\r\nclass HistoryEntry {\r\n    constructor(layers) {\r\n        this.layers = layers.map((layer) => new LayerData(layer))\r\n    }\r\n}\r\n\r\nclass LayerData {\r\n    constructor(layer) {\r\n        this.imageData = layer.canvasRef.current.toDataURL(\"image/png\")\r\n        this.metaData = {...layer}\r\n        delete this.metaData.canvasRef\r\n    }\r\n}\r\n\r\nconst restoreCanvasFromLayerData = function(canvasElement, layerData) {\r\n    return new Promise((resolve, reject) => {\r\n    \r\n        const canvasElementContext = canvasElement.getContext('2d')\r\n\r\n        const image = new Image()\r\n        image.src = layerData.imageData\r\n\r\n        image.onload = () => {\r\n            // layerCanvasContext.clearRect(0, 0, layerCanvas.width, layerCanvas.height)\r\n            canvasElementContext.drawImage(image, 0, 0)\r\n            resolve()\r\n        }\r\n    })\r\n}\r\n\r\nconst restoreLayerFromData = function(layer, layerData) {\r\n    // console.log(layer, layerData)\r\n    Object.assign(layer, layerData.metaData)\r\n\r\n    const layerCanvas = layer.canvasRef.current\r\n    restoreCanvasFromLayerData(layerCanvas, layerData)\r\n        .then(() => layer.onUpdate())\r\n}\r\n\r\nconst HistoryContext = createContext()\r\n\r\nexport function useHistory() {\r\n    return useContext(HistoryContext)\r\n}\r\n\r\nexport function HistoryProvider(props) {\r\n    const {layers, addLayer, removeLayer} = useLayers()\r\n    const {width, height} = useProjectSettings()\r\n    const [historyStack, setHistoryStack] = useState([])\r\n    const [currentHistoryIndex, setCurrentHistoryIndex] = useState(-1)\r\n\r\n    const canUndo = currentHistoryIndex > 0\r\n    const canRedo = currentHistoryIndex < historyStack.length - 1\r\n\r\n    const layerToRestoreRef = useRef(null)\r\n\r\n    const undo = function() {\r\n        if (!canUndo) return\r\n        setCurrentHistoryIndex(currentHistoryIndex - 1)\r\n        const lastEntry = historyStack[currentHistoryIndex - 1]\r\n        restoreLayers(lastEntry)\r\n    }\r\n\r\n    const redo = function() {\r\n        if (!canRedo) return\r\n        setCurrentHistoryIndex(currentHistoryIndex + 1)\r\n        const nextEntry = historyStack[currentHistoryIndex + 1]\r\n        restoreLayers(nextEntry)\r\n    }\r\n\r\n    const pushEntryToHistory = function() {\r\n        const entry = new HistoryEntry(layers)\r\n        setCurrentHistoryIndex(currentHistoryIndex + 1)\r\n        const previousEntries = historyStack.slice(0, currentHistoryIndex + 1)\r\n        const newHistoryStack = [...previousEntries, entry]\r\n        // console.log(\"history index: \", currentHistoryIndex)\r\n        // console.log(\"pushEntryToHistory new: \", newHistoryStack)\r\n        \r\n        setHistoryStack(newHistoryStack)\r\n    }\r\n\r\n    const restoreLayers = function(entry) {\r\n        // Clear all the layers\r\n        layers.forEach(layer => {\r\n            // Check if the layer is in the history entry\r\n            if (entry.layers.some(layerData => layerData.metaData.id === layer.id)) {\r\n                layer.canvasRef.current.getContext('2d').clearRect(0, 0, width, height)\r\n                layer.onUpdate()\r\n            }\r\n            // If not, remove the layer\r\n            else {\r\n                removeLayer(layer)\r\n            }\r\n        })\r\n\r\n        // Go through each of the layer data objs in the entry and restore the layers from those\r\n        entry.layers.forEach(layerData => {\r\n            // Find the layer that matches our layerData object (so we can restore it)\r\n            const layerToRestore = layers.find(layer => layer.id === layerData.metaData.id)\r\n            if (layerToRestore) {\r\n                // console.log(layerToRestore, layerData, historyStack)\r\n                restoreLayerFromData(layerToRestore, layerData)\r\n            }\r\n            else {\r\n                const blankLayer = addLayer()\r\n\r\n                layerToRestoreRef.current = [blankLayer, layerData]\r\n\r\n                restoreLayerFromData(blankLayer, layerData)\r\n                // restoreLayerFromData(blankLayer, layerData)\r\n            }\r\n        })\r\n    }\r\n\r\n    const clearHistory = function() {\r\n        setHistoryStack([])\r\n    }\r\n\r\n    const historyData = {\r\n        undo, redo,\r\n        canUndo, canRedo,\r\n        pushEntryToHistory,\r\n        clearHistory\r\n    }\r\n\r\n    return (\r\n        <HistoryContext.Provider value={historyData}>\r\n            {props.children}\r\n        </HistoryContext.Provider>\r\n    )\r\n}","import React from \"react\"\r\nimport \"./UndoButtons.css\"\r\n\r\nimport {BsArrowCounterclockwise, BsArrowClockwise} from \"react-icons/bs\"\r\n\r\nimport { useHistory } from \"../../../hooks/useHistory.js\"\r\n\r\nexport default function UndoButtons() {\r\n    const {undo, redo, canUndo, canRedo} = useHistory()\r\n\r\n    const render = function() {\r\n        return (\r\n            <div className=\"UndoButtons\">\r\n                <button className={`undoButton ${canUndo ? \"\" : \"disabled\"}`} onClick={undo}><BsArrowCounterclockwise/><div className=\"letter\">z</div></button>\r\n                <button className={`redoButton ${canRedo ? \"\" : \"disabled\"}`} onClick={redo}><BsArrowClockwise/><div className=\"letter\">y</div></button>\r\n            </div>\r\n        )\r\n    }\r\n    return render()\r\n}","import { useState } from \"react\"\r\nimport {BsCaretLeft, BsCaretDownFill} from \"react-icons/bs\"\r\n\r\nimport \"./OptionWindow.css\"\r\n\r\nexport default function OptionWindow(props) {\r\n    const title = props.title\r\n    const onExpand = props.onExpand ?? (() => {})\r\n    const onCollapse = props.onCollapse ?? (() => {})\r\n\r\n    const [expanded, setExpanded] = useState(true)\r\n\r\n    const collapse = function() {\r\n        setExpanded(false)\r\n        onCollapse()\r\n    }\r\n\r\n    const expand = function() {\r\n        setExpanded(true)\r\n        onExpand()\r\n    }\r\n\r\n    const renderExpandButton = function() {\r\n        if (expanded) return <button onClick={collapse}><BsCaretDownFill/></button>\r\n        return <button onClick={expand}><BsCaretLeft/></button>\r\n    }\r\n\r\n    const render = function() {\r\n        return (\r\n            <div className=\"optionWindow\">\r\n                <div className=\"titleBar\">\r\n                    <h2 className=\"title\">{title}</h2>\r\n                    {renderExpandButton()}\r\n                </div>\r\n                <div style={{display: expanded ? \"block\" : \"none\"}}>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return render()\r\n}","// Converts a rgba color object to the format that the canvas is looking for\r\nexport function colorToCanvasColor(color){\r\n    return `\r\n        rgba(\r\n            ${color.r},\r\n            ${color.g},\r\n            ${color.b},\r\n            ${color.a}\r\n        )\r\n    `\r\n}\r\n\r\n// Converts rgba color object into hexa color string\r\nexport function colorToHexColor(color) {\r\n    if (!color) return null\r\n    \r\n    const {r, g, b, a} = color\r\n    const hexColorComponents = [\r\n        r.toString(16), \r\n        g.toString(16), \r\n        b.toString(16), \r\n        a.toString(16)\r\n    ]\r\n    \r\n    const stringComponents = hexColorComponents.map(component => (component.length === 1 ? \"0\" + component : component))\r\n    const hexColor = `#${stringComponents.join(\"\")}`\r\n    \r\n    return hexColor\r\n}\r\n\r\n// Compares 2 colors, returns true if they are identical(r, g, b, a)\r\nexport function colorsEqual(color1, color2) {\r\n    if (!color1 || !color2) return color1 === color2\r\n    return color1.r === color2.r && color1.g === color2.g && color1.b === color2.b && color1.a === color2.a\r\n}","import React from \"react\"\r\nimport \"./ColoredSquare.css\"\r\n\r\nimport { colorToCanvasColor } from \"../../../core/utils/colors\"\r\n\r\nexport default function ColoredSquare(props) {\r\n    const color = props.color\r\n    \r\n    const render = function() {\r\n        return (\r\n            <span className=\"coloredSquareContainer\">\r\n                <span className=\"coloredSquare\" style={{background: colorToCanvasColor(color)}}/>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    return render()\r\n}","import { BsEyedropper } from \"react-icons/bs\"\r\nimport ColoredSquare from \"../../components/common/ColoredSquare/ColoredSquare\"\r\n\r\nclass ColorPicker {\r\n    constructor() {\r\n        this.name = \"Color Picker\"\r\n        this.usesColors = false\r\n        \r\n        this.canvasContext = null\r\n        \r\n        this.options = {\r\n            scale : 1\r\n        }\r\n\r\n        this.color = {\r\n            r:0,\r\n            g:0,\r\n            b:0,\r\n            a:0\r\n        }\r\n    }\r\n\r\n    updateStatus(status) {\r\n        this.status = status\r\n        this.onStatusChange(status)\r\n    }\r\n\r\n    onStatusChange(status) {}\r\n\r\n    renderIcon() {\r\n        return <BsEyedropper/>\r\n    }\r\n\r\n    getColor(position) {\r\n        const pixelData = this.canvasContext.getImageData(position.x, position.y, 1, 1)\r\n        const [r, g, b, a] = pixelData.data\r\n        const prea = a/255\r\n        return {\r\n            r,\r\n            g,\r\n            b,\r\n            a: prea.toFixed(2)\r\n        }\r\n    }\r\n\r\n    mouseDown(position) {\r\n        this.position = position\r\n        this.color = this.getColor(position)\r\n    }\r\n    \r\n    mouseUp(position, color) {}\r\n\r\n    mouseMove(position) {\r\n        this.color = this.getColor(position)\r\n        const status = (\r\n            <>\r\n                Getting color data at ({position.x}, {position.y}), <ColoredSquare color={this.color}/>rgba({this.color.r}, {this.color.g}, {this.color.b}, {this.color.a})\r\n            </>\r\n        )\r\n        this.updateStatus(status)\r\n    }\r\n}\r\n\r\nexport default new ColorPicker()","import React, { useState, useContext, createContext } from \"react\"\r\nimport { colorsEqual } from \"../core/utils/colors\"\r\n\r\nconst BrushColorContext = createContext()\r\nconst DEFAULT_COLOR = {r:0, g:0, b:0, a:1}\r\n\r\nexport function useBrushColor() {\r\n    return useContext(BrushColorContext)\r\n}\r\n\r\nexport function BrushColorProvider(props) {\r\n    const [brushColor, setBrushColor] = useState(DEFAULT_COLOR)\r\n    const [colorHistory, setColorHistory] = useState([brushColor])\r\n    const [colorPickerColor, setColorPickerColor] = useState([null])\r\n\r\n    const pushColorToHistory = function(colorToAdd) {\r\n        const filteredHistory = colorHistory.filter(color => !colorsEqual(color, colorToAdd))\r\n        const newColorHistory = [colorToAdd, ...filteredHistory].slice(0, 32)\r\n        setColorHistory(newColorHistory)\r\n    }\r\n\r\n    const brushColorData = {\r\n        brushColor, setBrushColor,\r\n        colorHistory, pushColorToHistory,\r\n        colorPickerColor, setColorPickerColor\r\n    }\r\n\r\n    return (\r\n        <BrushColorContext.Provider value={brushColorData}>\r\n            {props.children}\r\n        </BrushColorContext.Provider>\r\n    )\r\n}","import {colorToCanvasColor} from \"../utils/colors\"\r\nimport {BsBrush} from \"react-icons/bs\"\r\n\r\nclass Brush {\r\n    constructor() {\r\n        this.name = \"Brush\"\r\n        this.usesColors = true\r\n        this.status = \"\"\r\n        \r\n        this.previewCanvasContext = null\r\n        this.canvasContext = null\r\n        \r\n        this.options = {\r\n            scale : 1,\r\n            AA : false,\r\n            replace : false\r\n        }\r\n\r\n        this.drawing = false\r\n        this.previousPosition = null\r\n    }\r\n\r\n    updateStatus(status) {\r\n        this.status = status\r\n        this.onStatusChange(status)\r\n    }\r\n\r\n    onStatusChange(status) {}\r\n\r\n    renderIcon() {\r\n        return <BsBrush/>\r\n    }\r\n\r\n    plotLine(context, startPosition, endPosition, color) {\r\n        if (!context) return\r\n        \r\n        context.fillStyle = colorToCanvasColor(color)\r\n        \r\n        // Find Δx and Δy\r\n        let deltaX = Math.abs(endPosition.x - startPosition.x)\r\n        let deltaY = Math.abs(endPosition.y - startPosition.y)\r\n\r\n        // Find slope with +1 or -1 to determine next pixel\r\n        let slopeX = (startPosition.x < endPosition.x) ? 1 : -1\r\n        let slopeY = (startPosition.y < endPosition.y) ? 1 : -1\r\n\r\n        let deltaError = deltaX - deltaY\r\n        \r\n        const currentPosition = {...startPosition}\r\n\r\n        let drawing = true\r\n        while(drawing) {\r\n            context.clearRect(currentPosition.x, currentPosition.y, this.options.scale, this.options.scale)\r\n            context.fillRect(currentPosition.x, currentPosition.y, this.options.scale, this.options.scale)\r\n\r\n            // If we have hit the end position, set drawing to false\r\n            drawing = currentPosition.x !== endPosition.x || currentPosition.y !== endPosition.y\r\n\r\n            const e2 = 2 * deltaError\r\n\r\n            if (e2 > -deltaY) { deltaError -= deltaY; currentPosition.x += slopeX; }\r\n            if (e2 < deltaX) { deltaError += deltaX; currentPosition.y += slopeY; }\r\n        }\r\n    }\r\n\r\n    drawPixel(context, position, color) {\r\n        if (!context) return\r\n        context.fillStyle = colorToCanvasColor(color)\r\n        // Clears before placing color again so it doesn't add up with transparency ect...\r\n        context.fillRect(position.x, position.y, this.options.scale, this.options.scale)\r\n        if (this.drawing) this.updateStatus(`Drawing pixel at ${position.x}, ${position.y}`)\r\n    }\r\n\r\n    mouseDown(position, color) {\r\n        this.drawing = true\r\n        this.drawPixel(this.canvasContext, position, color)\r\n    }\r\n\r\n    mouseUp(position, color) {\r\n        this.drawing = false\r\n        this.previousPosition = null\r\n    }\r\n\r\n    mouseMove(position, color) {\r\n        const context = this.drawing ? this.canvasContext : this.previewCanvasContext\r\n        this.drawPixel(context, position, color)\r\n\r\n        if (this.drawing) {\r\n            if (this.previousPosition) {\r\n                this.plotLine(context, this.previousPosition, position, color)\r\n            }\r\n            this.previousPosition = position\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Brush()","import React, { useState, useContext, createContext, useEffect } from \"react\"\r\nimport Brush from \"../core/tools/Brush\"\r\n\r\nconst ActiveToolContext = createContext()\r\n\r\nexport function useActiveTool(defaultTool = null) {\r\n    const {activeTool, setActiveTool, toolStatus, scale, setScale} = useContext(ActiveToolContext)\r\n\r\n    if(activeTool === undefined) setActiveTool(defaultTool)\r\n\r\n    return {activeTool, setActiveTool, toolStatus, scale, setScale}\r\n}\r\n\r\nexport function ActiveToolProvider(props) {\r\n    const [activeTool, setActiveTool] = useState(Brush)\r\n    const [toolStatus, setToolStatus] = useState(\"\")\r\n    const [scale, setScale] = useState(1)\r\n\r\n    const setToolScale = function(scale) {\r\n        activeTool.options.scale = scale\r\n        setScale(scale)\r\n    }\r\n\r\n    activeTool.onStatusChange = setToolStatus\r\n\r\n    useEffect(() => {\r\n        setToolStatus(`Selected ${activeTool.name}`)\r\n        setScale(activeTool.options.scale)\r\n        \r\n    }, [activeTool])\r\n\r\n    return (\r\n        <ActiveToolContext.Provider value={{activeTool, setActiveTool, toolStatus, scale, setScale : setToolScale}}>\r\n            {props.children}\r\n        </ActiveToolContext.Provider>\r\n    )\r\n}","import React from \"react\"\r\nimport \"./ColorMenu.css\"\r\n\r\nimport OptionWindow from \"../../../common/OptionWindow/OptionWindow\"\r\nimport ColorPicker from \"../../../../core/tools/ColorPicker\"\r\nimport { ChromePicker } from \"react-color\"\r\n\r\nimport {useBrushColor} from \"../../../../hooks/useBrushColor\"\r\nimport { useActiveTool } from \"../../../../hooks/useActiveTool\"\r\n\r\nexport default function ColorMenu() {\r\n    const {activeTool} = useActiveTool()\r\n    const {brushColor, setBrushColor, colorPickerColor} = useBrushColor()\r\n\r\n    const renderColorPicker = function () {\r\n        return (\r\n            <ChromePicker\r\n                color={activeTool === ColorPicker ? colorPickerColor : brushColor}\r\n                onChange={(color) => setBrushColor(color.rgb)}\r\n            />\r\n        )\r\n    }\r\n\r\n    const render = function() {\r\n        return (\r\n            <OptionWindow title=\"Color\">\r\n                {renderColorPicker()}\r\n            </OptionWindow>\r\n        )\r\n    }\r\n    \r\n    return render()\r\n}\r\n","import React from \"react\"\r\nimport \"./RecentColors.css\"\r\n\r\nimport OptionWindow from \"../../../common/OptionWindow/OptionWindow\"\r\n\r\nimport {colorsEqual, colorToCanvasColor} from \"../../../../core/utils/colors\"\r\n\r\nimport {useBrushColor} from \"../../../../hooks/useBrushColor\"\r\n\r\nexport default function RecentColors() {\r\n    const {brushColor, setBrushColor, colorHistory} = useBrushColor()\r\n\r\n    const renderRecentColor = function(color, index) {\r\n        const isActive = colorsEqual(brushColor, color)\r\n        const className = isActive ? \"selected\" : null\r\n        return (\r\n            <div className=\"colorButtonContainer\" key={index}>\r\n                <button \r\n                    style={{background: colorToCanvasColor(color)}}\r\n                    onClick={() => setBrushColor(color)}\r\n                    className={className}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const render = function() {\r\n        return (\r\n            <OptionWindow title=\"Recent Colors\">\r\n                <div className=\"recentColors\">\r\n                    {colorHistory.map(renderRecentColor)}\r\n                </div>\r\n            </OptionWindow>\r\n        )\r\n    }\r\n    \r\n    return render()\r\n}\r\n","import React from \"react\"\r\nimport \"./StrokeOptions.css\"\r\n\r\nimport OptionWindow from \"../../../common/OptionWindow/OptionWindow\"\r\n\r\nimport {useActiveTool} from \"../../../../hooks/useActiveTool\"\r\n\r\nexport default function StrokeOptions() {\r\n    const {scale, setScale} = useActiveTool()\r\n\r\n    const renderStrokeOption = function() {\r\n        return (\r\n            <div className=\"option\">\r\n                <input type=\"number\" id=\"scale\" className=\"scaleInput\" value={scale} onChange={(event) => setScale(event.target.value)}/>\r\n                <label htmlFor=\"scale\" className=\"scaleLabel\">Scale: </label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const render = function() {\r\n        return (\r\n            <OptionWindow title=\"Stroke Options\">\r\n                <div className=\"strokeOptions\">\r\n                    {renderStrokeOption()}\r\n                </div>\r\n            </OptionWindow>\r\n        )\r\n    }\r\n    \r\n    return render()\r\n}\r\n","import React from \"react\"\r\nimport \"./ToolOptions.css\"\r\n\r\nimport ColorMenu from \"./ColorMenu/ColorMenu\"\r\nimport RecentColors from \"./RecentColors/RecentColors\"\r\nimport StrokeOptions from \"./StrokeOptions/StrokeOptions\"\r\n\r\nexport default function ToolOptions() {\r\n    const render = function() {\r\n        return (\r\n            <div className=\"toolOptions\">\r\n                <StrokeOptions/>\r\n                <ColorMenu/>\r\n                <RecentColors/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return render()\r\n}","import {colorToCanvasColor} from \"../utils/colors\"\r\nimport {BsDashLg} from \"react-icons/bs\"\r\n\r\nclass Line {\r\n    constructor() {\r\n        this.name = \"Line\"\r\n        this.usesColors = true\r\n        this.status = \"\"\r\n        \r\n        this.previewCanvasContext = null\r\n        this.canvasContext = null\r\n        \r\n        this.options = {\r\n            scale : 1\r\n        }\r\n\r\n        this.startPosition = null\r\n    }\r\n\r\n    updateStatus(status) {\r\n        this.status = status\r\n        this.onStatusChange(status)\r\n    }\r\n\r\n    onStatusChange(status) {}\r\n\r\n    renderIcon() {\r\n        return <BsDashLg/>\r\n    }\r\n\r\n    isDrawing() {\r\n        return !!this.startPosition\r\n    }\r\n\r\n    drawPixel(context, position, color) {\r\n        if (!context) return\r\n        context.fillStyle = colorToCanvasColor(color)\r\n        // Clears before placing color again so it doesn't add up with transparency ect...\r\n        context.fillRect(position.x, position.y, this.options.scale, this.options.scale)\r\n    }\r\n\r\n    plotLine(context, startPosition, endPosition, color) {\r\n        if (!context) return\r\n        \r\n        context.fillStyle = colorToCanvasColor(color)\r\n        \r\n        // Find Δx and Δy\r\n        let deltaX = Math.abs(endPosition.x - startPosition.x)\r\n        let deltaY = Math.abs(endPosition.y - startPosition.y)\r\n\r\n        // Find slope with +1 or -1 to determine next pixel\r\n        let slopeX = (startPosition.x < endPosition.x) ? 1 : -1\r\n        let slopeY = (startPosition.y < endPosition.y) ? 1 : -1\r\n\r\n        let deltaError = deltaX - deltaY\r\n        \r\n        const currentPosition = {...startPosition}\r\n\r\n        let drawing = true\r\n        while(drawing) {\r\n            context.fillRect(currentPosition.x, currentPosition.y, this.options.scale, this.options.scale)\r\n\r\n            // If we have hit the end position, set drawing to false\r\n            drawing = currentPosition.x !== endPosition.x || currentPosition.y !== endPosition.y\r\n\r\n            const e2 = 2*deltaError\r\n\r\n            if (e2 > -deltaY) { deltaError -= deltaY; currentPosition.x += slopeX; }\r\n            if (e2 < deltaX) { deltaError += deltaX; currentPosition.y += slopeY; }\r\n        }\r\n    }\r\n\r\n    mouseDown(position) {\r\n        this.startPosition = position\r\n    }\r\n\r\n    mouseUp(position, color) {\r\n        // Draw the line from initial position to end position\r\n        this.plotLine(this.canvasContext, this.startPosition, position, color)\r\n        this.updateStatus(`Line drawn between (${this.startPosition.x}, ${this.startPosition.y}) and (${position.x}, ${position.y})`)\r\n        this.startPosition = null\r\n    }\r\n\r\n    mouseMove(position, color) {\r\n        if (this.isDrawing()) {\r\n            this.plotLine(this.previewCanvasContext, this.startPosition, position, color)\r\n        }\r\n        else {\r\n            const context = this.previewCanvasContext\r\n            this.drawPixel(context, position, color)\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Line()","import {colorToCanvasColor} from \"../utils/colors\"\r\nimport {BsSquare} from \"react-icons/bs\"\r\n\r\nclass Rectangle {\r\n    constructor() {\r\n        this.name = \"Rectangle\"\r\n        this.usesColors = true\r\n        this.status = \"\"\r\n        \r\n        this.previewCanvasContext = null\r\n        this.canvasContext = null\r\n        this.options = {\r\n            scale : 1\r\n        }\r\n\r\n        this.startPosition = null\r\n    }\r\n\r\n    updateStatus(status) {\r\n        this.status = status\r\n        this.onStatusChange(status)\r\n    }\r\n\r\n    onStatusChange(status) {}\r\n\r\n    renderIcon() {\r\n        return <BsSquare/>\r\n    }\r\n\r\n    isDrawing() {\r\n        return !!this.startPosition\r\n    }\r\n\r\n    drawPixel(context, position, color) {\r\n        if (!context) return\r\n        context.fillStyle = colorToCanvasColor(color)\r\n        // Clears before placing color again so it doesn't add up with transparency ect...\r\n        context.fillRect(position.x, position.y, this.options.scale, this.options.scale)\r\n    }\r\n\r\n    plotLine(context, startPosition, endPosition, color) {\r\n        if (!context) return\r\n        \r\n        context.fillStyle = colorToCanvasColor(color)\r\n        \r\n        // Find Δx and Δy\r\n        let deltaX = Math.abs(endPosition.x - startPosition.x)\r\n        let deltaY = Math.abs(endPosition.y - startPosition.y)\r\n\r\n        // Find slope with +1 or -1 to determine next pixel\r\n        let slopeX = (startPosition.x < endPosition.x) ? 1 : -1\r\n        let slopeY = (startPosition.y < endPosition.y) ? 1 : -1\r\n\r\n        let deltaError = deltaX - deltaY\r\n        \r\n        const currentPosition = {...startPosition}\r\n\r\n        let drawing = true\r\n        while(drawing) {\r\n            context.fillRect(currentPosition.x, currentPosition.y, this.options.scale, this.options.scale)\r\n\r\n            // If we have hit the end position, set drawing to false\r\n            drawing = currentPosition.x !== endPosition.x || currentPosition.y !== endPosition.y\r\n\r\n            const e2 = 2 * deltaError\r\n\r\n            if (e2 > -deltaY) { deltaError -= deltaY; currentPosition.x += slopeX; }\r\n            if (e2 < deltaX) { deltaError += deltaX; currentPosition.y += slopeY; }\r\n        }\r\n    }\r\n\r\n    plotRectangle(context, startPosition, endPosition, color) {\r\n        const p1 = startPosition\r\n        const p2 = {x : endPosition.x, y : startPosition.y}\r\n        const p3 = endPosition\r\n        const p4 = {x : startPosition.x, y : endPosition.y}\r\n        this.plotLine(context, p1, p2, color)\r\n        this.plotLine(context, p2, p3, color)\r\n        this.plotLine(context, p3, p4, color)\r\n        this.plotLine(context, p4, p1, color)\r\n    }\r\n\r\n    mouseDown(position) {\r\n        this.startPosition = position\r\n    }\r\n\r\n    mouseUp(position, color) {\r\n        // Draw the line from initial position to end position\r\n        this.plotRectangle(this.canvasContext, this.startPosition, position, color)\r\n        this.updateStatus(`Rectangle drawn between (${this.startPosition.x}, ${this.startPosition.y}) and (${position.x}, ${position.y})`)\r\n        this.startPosition = null\r\n    }\r\n\r\n    mouseMove(position, color) {\r\n        if (this.isDrawing()) {\r\n            this.plotRectangle(this.previewCanvasContext, this.startPosition, position, color)\r\n        }\r\n        else {\r\n            const context = this.previewCanvasContext\r\n            this.drawPixel(context, position, color)\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Rectangle()","import { colorToCanvasColor } from \"../utils/colors\"\r\nimport { BsCircle } from \"react-icons/bs\"\r\n\r\nclass Circle {\r\n    constructor() {\r\n        this.name = \"Circle\"\r\n        this.usesColors = true\r\n        this.status = \"\"\r\n        \r\n        this.previewCanvasContext = null\r\n        this.canvasContext = null\r\n        \r\n        this.options = {\r\n            scale : 1\r\n        }\r\n\r\n        this.startPosition = null\r\n        this.radius = null\r\n    }\r\n\r\n    updateStatus(status) {\r\n        this.status = status\r\n        this.onStatusChange(status)\r\n    }\r\n\r\n    onStatusChange(status) {}\r\n\r\n    renderIcon() {\r\n        return <BsCircle/>\r\n    }\r\n\r\n    isDrawing() {\r\n        return !!this.startPosition\r\n    }\r\n\r\n    plotCircle(context, startPosition, endPosition, color) {\r\n        if (!context) return\r\n        \r\n        context.fillStyle = colorToCanvasColor(color)\r\n\r\n        let radius = Math.abs(this.startPosition.x - endPosition.x)\r\n\r\n        let x = -radius, y = 0, err = 2 - 2 * radius                /* bottom left to top right */\r\n\r\n        while (x < 0) {\r\n            context.fillRect(startPosition.x - x, startPosition.y + y, this.options.scale, this.options.scale)                            /*   I. Quadrant +x +y */\r\n            context.fillRect(startPosition.x - y, startPosition.y - x, this.options.scale, this.options.scale)                            /*  II. Quadrant -x +y */\r\n            context.fillRect(startPosition.x + x, startPosition.y - y, this.options.scale, this.options.scale)                            /* III. Quadrant -x -y */\r\n            context.fillRect(startPosition.x + y, startPosition.y + x, this.options.scale, this.options.scale)                            /*  IV. Quadrant +x -y */\r\n            \r\n            radius = err                                       \r\n            \r\n            if (radius <= y) err += ++y * 2 + 1                                   /* y step */\r\n            if (radius > x || err > y) err += ++x * 2 + 1                        /* x step */\r\n            this.radius = radius\r\n        }\r\n    }\r\n\r\n    plotShape(context, startPosition, endPosition, color) {\r\n        this.plotCircle(context, startPosition, endPosition, color)\r\n    }\r\n\r\n    drawPixel(context, position, color) {\r\n        if (!context) return\r\n        context.fillStyle = colorToCanvasColor(color)\r\n        // Clears before placing color again so it doesn't add up with transparency ect...\r\n        context.fillRect(position.x, position.y, this.options.scale, this.options.scale)\r\n    }\r\n\r\n    mouseDown(position) {\r\n        this.startPosition = position\r\n    }\r\n\r\n    mouseUp(position, color) {\r\n        // Draw the line from initial position to end position\r\n        this.plotShape(this.shape, this.canvasContext, this.startPosition, position, color)\r\n        this.updateStatus(`Circle drawn at (${this.startPosition.x}, ${this.startPosition.y})`) //with radius of ${this.radius}\r\n        this.startPosition = null\r\n    }\r\n\r\n    mouseMove(position, color) {\r\n        if (this.isDrawing()) {\r\n            this.plotShape(this.shape, this.previewCanvasContext, this.startPosition, position, color)\r\n        }\r\n        else {\r\n            const context = this.previewCanvasContext\r\n            this.drawPixel(context, position, color)\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Circle()","import {colorsEqual, colorToCanvasColor} from \"../utils/colors\"\r\nimport {BsPaintBucket} from \"react-icons/bs\"\r\n\r\nclass Fill {\r\n    constructor(maxWidth, maxHeight) {\r\n        this.name = \"Flood Fill\"\r\n        this.usesColors = true\r\n        this.status = \"\"\r\n        \r\n        this.previewCanvasContext = null\r\n        this.canvasContext = null\r\n\r\n        this.options = {\r\n            scale : 1,\r\n            AA : false,\r\n            replace : false\r\n        }\r\n        \r\n        this.drawing = false\r\n    }\r\n\r\n    updateStatus(status) {\r\n        this.status = status\r\n        this.onStatusChange(status)\r\n    }\r\n\r\n    onStatusChange(status) {}\r\n\r\n    renderIcon() {\r\n        return <BsPaintBucket/>\r\n    }\r\n\r\n    floodFill(position, oldColor, newColor) {\r\n        if (colorsEqual(this.getColor(position), oldColor)) {\r\n            if (position.x < 0 || position.y < 0 || position.x > this.canvasContext.canvas.width - 1 || position.y > this.canvasContext.canvas.height - 1) return\r\n\r\n            // Fill in the current pixel\r\n            this.drawPixel(this.canvasContext, position, newColor)\r\n\r\n            if (colorsEqual(this.getColor(position), oldColor)) return\r\n            \r\n            // Calculate all adjacent positions\r\n            const {x, y} = position\r\n            const adjacentPositions = [\r\n                {x : x + 1, y},\r\n                {x : x - 1, y},\r\n                {x, y : y + 1},\r\n                {x, y : y - 1}\r\n            ]\r\n\r\n            // Rescurisvely call floodFill to fill in all adjacent positions\r\n            adjacentPositions.forEach((adjacentPosition) => {\r\n                this.floodFill(adjacentPosition, oldColor, newColor)\r\n            })\r\n        }\r\n    }\r\n\r\n    getColor(position) {\r\n        const pixelData = this.canvasContext.getImageData(position.x, position.y, 1, 1)\r\n        const [r, g, b, a] = pixelData.data\r\n        return {\r\n            r,\r\n            g,\r\n            b,\r\n            a: a/255\r\n        }\r\n    }\r\n\r\n    drawPixel(context, position, color) {\r\n        if (!context) return\r\n        context.fillStyle = colorToCanvasColor(color)\r\n        // Clears before placing color again so it doesn't add up with transparency ect...\r\n        context.fillRect(position.x, position.y, this.options.scale, this.options.scale)\r\n    }\r\n\r\n    mouseDown(position, color, maxWidth, maxHeight) {\r\n        this.position = position\r\n        this.drawing = true\r\n        if (this.drawing) this.updateStatus(`Flood filling from ${position.x}, ${position.y}`)\r\n    }\r\n\r\n    mouseUp(position, color, maxWidth, maxHeight) {\r\n        this.drawing = false\r\n        const colorToBeFilled = this.getColor(position)\r\n        if (colorsEqual(colorToBeFilled, color)) return\r\n        this.floodFill(position, colorToBeFilled, color, maxWidth, maxHeight)\r\n    }\r\n\r\n    mouseMove(position, color) {}\r\n}\r\n\r\nexport default new Fill()","import {BsEraser} from \"react-icons/bs\"\r\n\r\nclass Eraser {\r\n    constructor() {\r\n        this.name = \"Eraser\"\r\n        this.usesColors = false\r\n\r\n        this.canvasContext = null\r\n        \r\n        this.options = {\r\n            scale : 1\r\n        }\r\n\r\n        this.drawing = false\r\n        this.previousPosition = null\r\n    }\r\n\r\n    updateStatus(status) {\r\n        this.status = status\r\n        this.onStatusChange(status)\r\n    }\r\n\r\n    onStatusChange(status) {}\r\n\r\n    renderIcon() {\r\n        return <BsEraser/>\r\n    }\r\n\r\n    plotLine(context, startPosition, endPosition) {\r\n        if (!context) return\r\n        \r\n        // Find Δx and Δy\r\n        let deltaX = Math.abs(endPosition.x - startPosition.x)\r\n        let deltaY = Math.abs(endPosition.y - startPosition.y)\r\n\r\n        // Find slope with +1 or -1 to determine next pixel\r\n        let slopeX = (startPosition.x < endPosition.x) ? 1 : -1\r\n        let slopeY = (startPosition.y < endPosition.y) ? 1 : -1\r\n\r\n        let deltaError = deltaX - deltaY\r\n        \r\n        const currentPosition = {...startPosition}\r\n\r\n        let drawing = true\r\n        while(drawing) {\r\n            this.erasePixel(context, currentPosition)\r\n\r\n            // If we have hit the end position, set drawing to false\r\n            drawing = currentPosition.x !== endPosition.x || currentPosition.y !== endPosition.y\r\n\r\n            const e2 = 2 * deltaError\r\n\r\n            if (e2 > -deltaY) { deltaError -= deltaY; currentPosition.x += slopeX; }\r\n            if (e2 < deltaX) { deltaError += deltaX; currentPosition.y += slopeY; }\r\n        }\r\n    }\r\n\r\n    erasePixel(context, position) {\r\n        if (!context) return\r\n        context.clearRect(position.x, position.y, this.options.scale, this.options.scale)\r\n        if (this.drawing) this.updateStatus(`Erasing pixel at ${position.x},${position.y}`)\r\n    }\r\n\r\n    mouseDown(position) {\r\n        this.erasePixel(this.canvasContext, position)\r\n        this.drawing = true\r\n    }\r\n    \r\n    mouseUp(position, color) {\r\n        this.drawing = false\r\n    }\r\n\r\n    mouseMove(position) {\r\n        const context = this.drawing ? this.canvasContext : this.previewCanvasContext\r\n        this.erasePixel(context, position)\r\n\r\n        if (this.drawing) {\r\n            if (this.previousPosition) {\r\n                this.plotLine(context, this.previousPosition, position)\r\n            }\r\n            this.previousPosition = position\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Eraser()","import {colorToCanvasColor} from \"../utils/colors\"\r\nimport {BsTriangle} from \"react-icons/bs\"\r\n\r\nclass Triangle {\r\n    constructor() {\r\n        this.name = \"Triangle\"\r\n        this.usesColors = true\r\n        this.status = \"\"\r\n        \r\n        this.previewCanvasContext = null\r\n        this.canvasContext = null\r\n        \r\n        this.options = {\r\n            scale : 1\r\n        }\r\n\r\n        this.startPosition = null\r\n    }\r\n\r\n    updateStatus(status) {\r\n        this.status = status\r\n        this.onStatusChange(status)\r\n    }\r\n\r\n    onStatusChange(status) {}\r\n\r\n    renderIcon() {\r\n        return <BsTriangle/>\r\n    }\r\n\r\n    isDrawing() {\r\n        return !!this.startPosition\r\n    }\r\n\r\n    drawPixel(context, position, color) {\r\n        if (!context) return\r\n        context.fillStyle = colorToCanvasColor(color)\r\n        // Clears before placing color again so it doesn't add up with transparency ect...\r\n        context.fillRect(position.x, position.y, this.options.scale, this.options.scale)\r\n    }\r\n\r\n    plotLine(context, startPosition, endPosition, color) {\r\n        if (!context) return\r\n        \r\n        context.fillStyle = colorToCanvasColor(color)\r\n        \r\n        // Find Δx and Δy\r\n        let deltaX = Math.abs(endPosition.x - startPosition.x)\r\n        let deltaY = Math.abs(endPosition.y - startPosition.y)\r\n\r\n        // Find slope with +1 or -1 to determine next pixel\r\n        let slopeX = (startPosition.x < endPosition.x) ? 1 : -1\r\n        let slopeY = (startPosition.y < endPosition.y) ? 1 : -1\r\n\r\n        let deltaError = deltaX - deltaY\r\n        \r\n        const currentPosition = {...startPosition}\r\n\r\n        let drawing = true\r\n        while(drawing) {\r\n            context.fillRect(currentPosition.x, currentPosition.y, this.options.scale, this.options.scale)\r\n\r\n            // If we have hit the end position, set drawing to false\r\n            drawing = currentPosition.x !== endPosition.x || currentPosition.y !== endPosition.y\r\n\r\n            const e2 = 2 * deltaError\r\n\r\n            if (e2 > -deltaY) { deltaError -= deltaY; currentPosition.x += slopeX; }\r\n            if (e2 < deltaX) { deltaError += deltaX; currentPosition.y += slopeY; }\r\n        }\r\n    }\r\n\r\n    plotTriangle(context, startPosition, endPosition, color) {\r\n        const p1 = startPosition\r\n        const p2 = {x : endPosition.x, y : startPosition.y}\r\n        const p3 = {x : Math.ceil((endPosition.x - startPosition.x) / 2 + startPosition.x), y : endPosition.y}\r\n        console.log(p1, p2, p3)\r\n        this.plotLine(context, p1, p2, color)\r\n        this.plotLine(context, p2, p3, color)\r\n        this.plotLine(context, p3, p1, color)\r\n    }\r\n\r\n    mouseDown(position) {\r\n        this.startPosition = position\r\n    }\r\n\r\n    mouseUp(position, color) {\r\n        // Draw the line from initial position to end position\r\n        this.plotTriangle(this.canvasContext, this.startPosition, position, color)\r\n        this.updateStatus(`Triangle drawn between (${this.startPosition.x}, ${this.startPosition.y}) and (${position.x}, ${position.y})`)\r\n        this.startPosition = null\r\n    }\r\n\r\n    mouseMove(position, color) {\r\n        if (this.isDrawing()) {\r\n            this.plotTriangle(this.previewCanvasContext, this.startPosition, position, color)\r\n        }\r\n        else {\r\n            const context = this.previewCanvasContext\r\n            this.drawPixel(context, position, color)\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Triangle()","import React from \"react\"\r\nimport \"./ToolBox.css\"\r\n\r\nimport UndoButtons from \"./UndoButtons/UndoButtons\"\r\nimport ToolOptions from \"./ToolOptions/ToolOptions\"\r\n\r\nimport Brush from \"../../core/tools/Brush.js\"\r\nimport Line from \"../../core/tools/Line.js\"\r\nimport Rectangle from \"../../core/tools/Rectangle\"\r\nimport Circle from \"../../core/tools/Circle.js\"\r\nimport Fill from \"../../core/tools/Fill.js\"\r\nimport Eraser from \"../../core/tools/Eraser.js\"\r\nimport Triangle from \"../../core/tools/Triangle\"\r\nimport ColorPicker from \"../../core/tools/ColorPicker.js\"\r\n\r\nimport { useActiveTool } from \"../../hooks/useActiveTool\"\r\nimport { useBrushColor } from \"../../hooks/useBrushColor\"\r\n\r\nexport default function ToolBox() {\r\n    const {activeTool, setActiveTool} = useActiveTool()\r\n    const {colorPickerColor} = useBrushColor()\r\n\r\n    const tools = [Brush, Eraser, Line, Triangle, Rectangle, Circle, Fill]\r\n\r\n    const renderToolButton = function(tool) {\r\n        // Check active tool and tell it its active\r\n        return (\r\n            <button\r\n                key={tool.name}\r\n                className={tool === activeTool ? \"active\" : \"\"}\r\n                onClick={() => setActiveTool(tool)}\r\n            >\r\n                {tool.renderIcon()}\r\n                <div className=\"number\">{tools.indexOf(tool) + 1}</div>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const useColorPicker = function() {\r\n        setActiveTool(ColorPicker)\r\n    }\r\n\r\n    const renderColorPicker = function() {\r\n        const active = activeTool === ColorPicker\r\n        \r\n        return (\r\n            <button className={`ColorPickerButton ${active ? \"active\" : \"\"}`} onClick={useColorPicker}>\r\n                <div className=\"colorPickerInner\" style={active ? {background: colorPickerColor} : {}}>\r\n                    {ColorPicker.renderIcon()}\r\n                    <div className=\"number\">8</div>\r\n                </div>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const render = function() {\r\n        return (\r\n            <div className=\"toolBox\">\r\n                <div className=\"toolBar\">\r\n                    {/* Iterates tool obj list and renders for each */}\r\n                    {tools.map(renderToolButton)}\r\n                    {renderColorPicker()}\r\n                    <UndoButtons/>\r\n                </div>\r\n                <ToolOptions/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return render()\r\n}","export function copyCanvasContents(sourceCanvas, destinationCanvas, clear = true) {\r\n    // console.log(\"copying canvas\")\r\n    const destinationContext = destinationCanvas.getContext('2d')\r\n    if (clear) destinationContext.clearRect(0, 0, destinationCanvas.width, destinationCanvas.height)\r\n    destinationContext.drawImage(sourceCanvas, 0, 0)\r\n}\r\n\r\nexport function clearCanvas(canvas) {\r\n    // console.log(\"clearing canvas\")\r\n    const canvasContext = canvas.getContext(\"2d\")\r\n    canvasContext.clearRect(0, 0, canvas.width, canvas.height)\r\n}","import {useEffect, useState, useRef} from \"react\"\r\nimport {BsTrashFill, BsTrash, BsEyeFill, BsEyeSlash, BsLockFill, BsUnlock} from \"react-icons/bs\";\r\nimport {useLayers} from \"../../../../hooks/useLayers\";\r\nimport \"./LayerPreview.css\"\r\n\r\nimport {copyCanvasContents} from \"../../../../core/utils/canvas\";\r\nimport { useProjectSettings } from \"../../../../hooks/useProjectSettings\";\r\n\r\nexport default function LayerPreview(props) {\r\n    const layer = props.layer\r\n\r\n    // Take onDelete listener from props, if it doesn't exist use a dummy function\r\n    const onDelete = props.onDelete ? props.onDelete : () => {}\r\n\r\n    const {activeLayer, setActiveLayer, removeLayer} = useLayers()\r\n    const {width, height} = useProjectSettings()\r\n\r\n    const previewCanvasRef = useRef(null)\r\n\r\n    const [visible, setVisible] = useState(layer.isVisible)\r\n    const [lock, setLock] = useState(layer.isLocked)\r\n    const [name, setName] = useState(layer.name)\r\n\r\n    const isActive = activeLayer?.id === layer.id\r\n    const layerClassName = `LayerPreview ${isActive ? \"active\" : \"\"}`\r\n\r\n    useEffect(() => {\r\n        const layerCanvas = layer.canvasRef.current\r\n        const previewCanvas = previewCanvasRef.current\r\n\r\n        const updatePreview = function() {\r\n            copyCanvasContents(layerCanvas, previewCanvas)\r\n            setVisible(layer.isVisible)\r\n            setLock(layer.isLocked)\r\n            setName(layer.name)\r\n        }\r\n\r\n        layer.addUpdateListener(updatePreview)\r\n\r\n        return () => {\r\n            layer.removeUpdateListener(updatePreview)\r\n        }\r\n\r\n    }, [layer])\r\n    \r\n    // const visibleClassName = `layerActionButton ${visible ? \"active\" : \"\"}`\r\n    const lockedClassName = `layerActionButton ${layer.isLocked ? \"inactive\" : \"\"}`\r\n    \r\n    return (\r\n        <div className={layerClassName} onClick={() => {setActiveLayer(layer)}}>\r\n            <div className=\"previewImage\">\r\n                <canvas className={height > width ? \"portrait\" : \"landscape\"}\r\n                    ref={previewCanvasRef}\r\n                    key={layer.id}\r\n                    width={width}\r\n                    height={height}\r\n                />\r\n            </div>\r\n            <div className=\"layerPreviewInner\">\r\n                <input className=\"layerPreviewTitle\" type=\"text\" value={name} onChange={(event) => {\r\n                    layer.setName(event.target.value)\r\n                    event.stopPropagation()\r\n                }}/>\r\n                <div>\r\n                    <button \r\n                        className=\"layerActionButton\"\r\n                        onClick={() => layer.toggleVisibility()}\r\n                    >\r\n                        {visible ? <BsEyeFill/> : <BsEyeSlash/>}\r\n                    </button>\r\n                    <button \r\n                        className=\"layerActionButton\"\r\n                        onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            layer.toggleLock()\r\n                        }}\r\n                    >\r\n                        {lock ? <BsLockFill/> : <BsUnlock/>}\r\n                    </button>\r\n                    <button \r\n                        className={lockedClassName}\r\n                        onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            removeLayer(layer)\r\n                            onDelete()\r\n                        }}\r\n                    >\r\n                        {lock ? <BsTrash/> : <BsTrashFill/>}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useRef } from \"react\"\r\nimport \"./LayersPanel.css\"\r\n\r\nimport OptionWindow from \"../../common/OptionWindow/OptionWindow\"\r\nimport LayerPreview from \"./LayerPreview/LayerPreview\"\r\nimport { BsPlusLg } from \"react-icons/bs\"\r\n\r\nimport { useHistory } from \"../../../hooks/useHistory\"\r\nimport { useLayers } from \"../../../hooks/useLayers\"\r\n\r\nexport default function LayersPanel() {\r\n    const {layers, addLayer} = useLayers()\r\n    const {pushEntryToHistory} = useHistory()\r\n\r\n    const layerAddedOrDeletedRef = useRef(false)\r\n\r\n    const onAddLayer = function() {\r\n        addLayer()\r\n        layerAddedOrDeletedRef.current = true\r\n    }\r\n\r\n    const onDeleteLayer = function(){\r\n        layerAddedOrDeletedRef.current = true\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (layerAddedOrDeletedRef.current) {\r\n            pushEntryToHistory()\r\n            layerAddedOrDeletedRef.current = false\r\n        }\r\n    }, [layers, pushEntryToHistory])\r\n\r\n    const render = function() {\r\n        return (\r\n            <OptionWindow title=\"Layers\">\r\n                <div className=\"LayersPanel\">\r\n                    <div className=\"panelTop\">\r\n                        <button onClick={onAddLayer} className=\"addLayerButton\"><BsPlusLg/> Add layer</button>\r\n                    </div>\r\n                    <div className=\"layers\">\r\n                        {[...layers].reverse().map(layer => \r\n                            (\r\n                                <LayerPreview\r\n                                    key={layer.id}\r\n                                    layer={layer}\r\n                                    onDelete={onDeleteLayer}\r\n                                />\r\n                            )\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </OptionWindow>\r\n        )\r\n    }\r\n    \r\n    return render()\r\n}","import React, {useEffect, useRef} from \"react\";\r\nimport \"./ExportPanel.css\"\r\n\r\nimport {useLayers} from \"../../../hooks/useLayers\";\r\n\r\nimport OptionWindow from \"../../common/OptionWindow/OptionWindow\";\r\n\r\nimport {clearCanvas, copyCanvasContents} from \"../../../core/utils/canvas\"\r\nimport { useProjectSettings } from \"../../../hooks/useProjectSettings\"\r\n\r\nimport { saveAs } from \"file-saver\"\r\nimport { BsBoxArrowUpRight } from \"react-icons/bs\";\r\n\r\nexport default function ExportPanel() {\r\n    const {layers} = useLayers()\r\n    const {width, height} = useProjectSettings()\r\n\r\n    const exportCanvasRef = useRef(null)\r\n\r\n    const exportImage = function() {\r\n\t\tif(!exportCanvasRef.current) return\r\n\t\tconst imageUrl = exportCanvasRef.current.toDataURL(\"image/png\")\r\n\t\tconsole.log(\"Exported to url: \", imageUrl)\r\n\t\tsaveAs(imageUrl, \"pxlexport.png\")\r\n\t}\r\n\r\n    useEffect(() => {\r\n        function generateExportPreview() {\r\n            const exportPreviewCanvas = exportCanvasRef.current\r\n            if (!exportPreviewCanvas) return\r\n            clearCanvas(exportPreviewCanvas)\r\n            layers.forEach(layer => {\r\n                const layerCanvas = layer.canvasRef.current\r\n                if (layerCanvas) copyCanvasContents(layerCanvas, exportPreviewCanvas, false) \r\n            })\r\n        }\r\n\r\n        generateExportPreview()\r\n\r\n        layers.forEach(layer => {\r\n            layer.addUpdateListener(generateExportPreview)\r\n        })\r\n\r\n        return () => {\r\n            layers.forEach(layer => {\r\n                layer.removeUpdateListener(generateExportPreview)\r\n            })\r\n        }\r\n    }, [layers])\r\n\r\n    const render = function() {\r\n        return (\r\n            <OptionWindow title=\"Export\">\r\n                <div className=\"ExportPanel\">\r\n                    <div className=\"panelTop\">\r\n                        <button className=\"exportButton\" onClick={exportImage}><BsBoxArrowUpRight/> Export from Layers</button>\r\n                    </div>\r\n                    <canvas\r\n                        className=\"exportPreviewCanvas\"\r\n                        ref={exportCanvasRef}\r\n                        width={width}\r\n                        height={height}\r\n                    />\r\n                </div>\r\n            </OptionWindow>\r\n        )\r\n    }\r\n    \r\n    return render()\r\n}","import { useProjectSettings } from \"../../../hooks/useProjectSettings\"\r\nimport OptionWindow from \"../../common/OptionWindow/OptionWindow\"\r\n\r\nimport \"./SettingsPanel.css\"\r\n\r\nexport default function SettingsPanel() {\r\n    const {width, setWidth, height, setHeight, scale, setScale} = useProjectSettings()\r\n\r\n    const render = function() {\r\n        return (\r\n            <OptionWindow title=\"Settings\">\r\n                <div className=\"settings\">\r\n                    <div className=\"setting\">\r\n                        <input type=\"number\" id=\"widthSetting\" className=\"widthSettingInput\" value={width} onChange={(event) => setWidth(parseInt(event.target.value))}/>\r\n                        <label htmlFor=\"widthSetting\" className=\"widthSettingLabel\">Width: </label>\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <input type=\"number\" id=\"heightSetting\" className=\"heightSettingInput\" value={height} onChange={(event) => setHeight(parseInt(event.target.value))}/>\r\n                        <label htmlFor=\"heightSetting\" className=\"heightSettingLabel\">Height: </label>\r\n                    </div>\r\n                    <div className=\"setting\">\r\n                        <input type=\"number\" id=\"scaleSetting\" className=\"scaleSettingInput\" value={scale} onChange={(event) => setScale(parseInt(event.target.value))}/>\r\n                        <label htmlFor=\"scaleSetting\" className=\"scaleSettingLabel\">Scale: </label>\r\n                    </div>\r\n                </div>\r\n            </OptionWindow>\r\n        )\r\n    }\r\n    return render()\r\n}","import React from \"react\"\r\nimport \"./ProjectOptions.css\"\r\n\r\nimport LayersPanel from \"./LayersPanel/LayersPanel\"\r\nimport ExportPanel from \"./ExportPanel/ExportPanel\"\r\nimport SettingsPanel from \"./SettingsPanel/SettingsPanel\"\r\n\r\nexport default function ProjectOptions() {\r\n    const render = function() {\r\n        return (\r\n            <div className=\"ProjectOptions\">\r\n                <SettingsPanel/>\r\n                <LayersPanel/>\r\n                <ExportPanel/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return render()\r\n}","import { useEffect, useRef, useState } from \"react\"\r\nimport \"./CanvasLayer.css\"\r\n\r\nexport default function CanvasLayer(props) {\r\n    const {layer, width, height} = props\r\n\r\n    const canvasLayerRef = useRef(null)\r\n    layer.canvasRef = canvasLayerRef\r\n\r\n    const [visible, setVisible] = useState(layer.isVisible)\r\n    // const [mounted, setMounted] = useState(false)\r\n\r\n    useEffect(() => {\r\n        function onUpdate() {\r\n            setVisible(layer.isVisible)\r\n        }\r\n\r\n        layer.addUpdateListener(onUpdate)\r\n\r\n        return () => {\r\n            layer.removeUpdateListener(onUpdate)\r\n        }\r\n    }, [layer])\r\n\r\n    // useEffect(() => {\r\n    //     setMounted(true)\r\n    // }, [mounted])\r\n\r\n    const render = function() {\r\n        const className = `canvasLayer ${visible ? \"\" : \"hidden\"}`\r\n\r\n        return (\r\n            <div className={className}>\r\n                {/* {layer.id === activeLayer.id ? <h2 style={{position : \"absolute\"}}>{layer.name}</h2> : null} */}\r\n                <canvas \r\n                    ref={canvasLayerRef}\r\n                    width={width}\r\n                    height={height}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return render()\r\n}","import {React} from \"react\"\r\nimport './PreviewLayer.css'\r\n\r\nimport {useProjectSettings} from \"../../../../hooks/useProjectSettings\"\r\n\r\nexport default function PreviewLayer() {\r\n    const {previewLayerCanvasRef, width, height} = useProjectSettings()\r\n\r\n    const render = function() {\r\n        return (\r\n            <div className=\"PreviewLayer\">\r\n                <canvas\r\n                    ref={previewLayerCanvasRef}\r\n                    width={width}\r\n                    height={height}\r\n                    id=\"previewLayerCanvas\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return render()\r\n}","// Returns canvas x, y coord object\r\nexport function getCanvasRelativePosition(mouseEvent, scale) {\r\n    const mouseX = mouseEvent.offsetX\r\n    const mouseY = mouseEvent.offsetY\r\n    \r\n    // const currentX = mouseX - pixelCanvasElement.offsetLeft\r\n    // const currentY = mouseY - pixelCanvasElement.offsetTop\r\n    \r\n    return ({\r\n        x : Math.floor(mouseX/scale),\r\n        y : Math.floor(mouseY/scale)\r\n    })\r\n}","import {React, useRef, useEffect} from \"react\"\r\nimport './PixelCanvas.css'\r\n\r\nimport CanvasLayer from \"./CanvasLayer/CanvasLayer\"\r\nimport PreviewLayer from \"./PreviewLayer/PreviewLayer\"\r\nimport colorPicker from \"../../../core/tools/ColorPicker\"\r\n\r\nimport { getCanvasRelativePosition } from \"../../../core/utils/coordinates\"\r\nimport { colorToCanvasColor } from \"../../../core/utils/colors\"\r\n\r\nimport Brush from \"../../../core/tools/Brush\"\r\n\r\nimport { useActiveTool } from \"../../../hooks/useActiveTool\"\r\nimport { useBrushColor } from \"../../../hooks/useBrushColor\"\r\nimport { useLayers } from \"../../../hooks/useLayers\"\r\nimport { useProjectSettings } from \"../../../hooks/useProjectSettings\"\r\nimport { useHistory } from \"../../../hooks/useHistory\"\r\n\r\nexport default function PixelCanvas() {\r\n    const {setCanvasCursorPosition, previewLayerCanvasRef, width, height, scale, setScale} = useProjectSettings()\r\n    const {layers, activeLayer} = useLayers()\r\n    const {activeTool, setActiveTool} = useActiveTool()\r\n    const {brushColor, setBrushColor, colorPickerColor, setColorPickerColor, pushColorToHistory} = useBrushColor()\r\n    const {pushEntryToHistory} = useHistory()\r\n\r\n    const pixelCanvasRef = useRef(null)\r\n\r\n    const previousMousePositionRef = useRef({x: null, y: null})\r\n\r\n    // Sets up listeners for mouse events on the canvas\r\n    useEffect(() => {\r\n        // Don't set listeners up if no active layer\r\n        if (!activeTool || !activeLayer || activeLayer.isLocked === true || !previewLayerCanvasRef.current || !activeLayer?.canvasRef?.current) return\r\n\r\n        const pixelCanvasElement = pixelCanvasRef.current\r\n\r\n        const layerCanvasContext = activeLayer.canvasRef.current.getContext('2d')\r\n        activeTool.canvasContext = layerCanvasContext\r\n\r\n        const previewCanvasContext = previewLayerCanvasRef.current.getContext('2d')\r\n        activeTool.previewCanvasContext = previewCanvasContext\r\n\r\n        // Mouse stuff handlers\r\n        const handleMouseDown = function(event) {\r\n            const clickCode = event.button\r\n            const position = getCanvasRelativePosition(event, scale)\r\n            \r\n            if (position.x < 0 || position.x > (width - 1) || position.y < 0 || position.y > (height - 1) || activeLayer.isLocked) return\r\n\r\n            switch (clickCode) {\r\n                case 0:\r\n                    if (activeTool.usesColors) pushColorToHistory(brushColor)\r\n                    activeTool.mouseDown(position, brushColor)\r\n                    break\r\n                default: break\r\n            }\r\n        }\r\n\r\n        const handleMouseUp = function(event) {\r\n            const clickCode = event.button\r\n            const position = getCanvasRelativePosition(event, scale)\r\n\r\n            if (activeTool === colorPicker) {\r\n                if (!colorPicker.color) return\r\n                setActiveTool(Brush)\r\n                setBrushColor(colorPicker.color)\r\n                setColorPickerColor(colorToCanvasColor(colorPicker.color))\r\n            }\r\n\r\n            if (position.x < 0 || position.x > (width - 1) || position.y < 0 || position.y > (height - 1) || activeLayer.isLocked) return\r\n            switch (clickCode) {\r\n                case 0:\r\n                    activeTool.mouseUp(position, brushColor)\r\n                    pushEntryToHistory()\r\n                    activeLayer.onUpdate()\r\n                    break\r\n                default: break\r\n            }\r\n            previewCanvasContext.clearRect(0, 0, width, height)\r\n        }\r\n\r\n        const handleMouseMove = function(event) {\r\n            const position = getCanvasRelativePosition(event, scale)\r\n\r\n            if (position.x < 0 || position.x > (width - 1) || position.y < 0 || position.y > (height - 1) || activeLayer.isLocked) return\r\n\r\n\r\n            if (activeTool === colorPicker) {\r\n                if (colorPicker.color === null) return\r\n                setColorPickerColor(colorPicker.color)\r\n                setColorPickerColor(colorToCanvasColor(colorPicker.color))\r\n            }\r\n\r\n            if (position.x < 0 || position.x > (width - 1) || position.y < 0 || position.y > (height - 1) || activeLayer.isLocked) {\r\n                previewCanvasContext.clearRect(0, 0, width, height)\r\n            }\r\n\r\n            const previousPosition = previousMousePositionRef.current\r\n\r\n            if (previousPosition.x !== position.x || previousPosition.y !== position.y) {\r\n                previewCanvasContext.clearRect(0, 0, width, height)\r\n                if (!(position.x > width || position.x < 0 || position.y > height || position.y < 0)) {\r\n                    activeTool.mouseMove(position, brushColor)\r\n                }\r\n                previousMousePositionRef.current = position\r\n                setCanvasCursorPosition(position)\r\n            }\r\n        }\r\n\r\n        activeLayer.onUpdate()\r\n\r\n        // Set up listeners\r\n        pixelCanvasElement.addEventListener(\"mousedown\", handleMouseDown)\r\n        pixelCanvasElement.addEventListener(\"mouseup\", handleMouseUp)\r\n        pixelCanvasElement.addEventListener(\"mousemove\", handleMouseMove)\r\n\r\n        return () => {\r\n            // Tear down listeners\r\n            pixelCanvasElement.removeEventListener(\"mousedown\", handleMouseDown)\r\n            pixelCanvasElement.removeEventListener(\"mouseup\", handleMouseUp)\r\n            pixelCanvasElement.removeEventListener(\"mousemove\", handleMouseMove)\r\n        }\r\n    }, [activeTool, setActiveTool, activeLayer, layers, scale, setScale, width, height, brushColor, setBrushColor, colorPickerColor, setColorPickerColor, pushColorToHistory, setCanvasCursorPosition, previewLayerCanvasRef, pushEntryToHistory])\r\n\r\n    const render = function() {\r\n        const elementWidth = width * scale\r\n        const elementHeight = height * scale\r\n\r\n        const canvasStyle = {\r\n            width: `${elementWidth}px`,\r\n            height: `${elementHeight}px`\r\n        }\r\n\r\n        return (\r\n            <div className={`pixelCanvas ${!activeLayer ? \"invisible\" : \"\"}`} id=\"pixelCanvas\" ref={pixelCanvasRef} style={canvasStyle}>\r\n                {layers.map(layer => (\r\n                    <CanvasLayer\r\n                        key={layer.id} \r\n                        layer={layer} \r\n                        width={width} \r\n                        height={height}\r\n                    />\r\n                ))}\r\n                <PreviewLayer/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return render()\r\n}","import {React, useEffect, useRef} from \"react\"\r\nimport \"./Workspace.css\"\r\n\r\nimport PixelCanvas from \"./PixelCanvas/PixelCanvas\"\r\n\r\nimport Brush from \"../../core/tools/Brush\"\r\nimport Eraser from \"../../core/tools/Eraser\"\r\nimport Line from \"../../core/tools/Line\"\r\nimport ColorPicker from \"../../core/tools/ColorPicker\"\r\nimport Fill from \"../../core/tools/Fill\"\r\nimport Circle from \"../../core/tools/Circle\"\r\nimport Rectangle from \"../../core/tools/Rectangle\"\r\nimport Triangle from \"../../core/tools/Triangle\"\r\n\r\nimport { useProjectSettings } from \"../../hooks/useProjectSettings\"\r\nimport { useHistory } from \"../../hooks/useHistory\"\r\nimport { useActiveTool } from \"../../hooks/useActiveTool\"\r\n\r\nexport default function Workspace() {\r\n    const {width, height, setScale} = useProjectSettings()\r\n    const {undo, redo} = useHistory()\r\n    const {setActiveTool} = useActiveTool()\r\n\r\n    const workspaceRef = useRef(null)\r\n\r\n    // Maybe bring these back locally, makes it a tiny bit laggy?\r\n    const {canvasX, setCanvasX, canvasY, setCanvasY} = useProjectSettings()\r\n\r\n    useEffect(() => {\r\n        const handleMouseWheel = function(event) {\r\n            if (width >= 1000 || height >= 1000) {\r\n                if (event.deltaY < 0) setScale((scale) => scale + 0.25)\r\n                if (event.deltaY > 0) setScale((scale) => scale - 0.25)\r\n            }\r\n            else {\r\n                if (event.deltaY < 0) setScale((scale) => scale + 1)\r\n                if (event.deltaY > 0) setScale((scale) => scale - 1)\r\n            }   \r\n        }\r\n\r\n        const handleMouseMove = function(event) {\r\n            if(!(event.buttons & 2)) return\r\n\r\n            setCanvasX((canvasX) => canvasX + event.movementX)\r\n            setCanvasY((canvasY) => canvasY + event.movementY)\r\n        }\r\n\r\n        const handleKeys = function(event) {\r\n            // Don't use hotkeys when an input is focused\r\n            if (document.activeElement.tagName === \"INPUT\") return\r\n            \r\n            event = event || window.event\r\n\r\n            const key = event.which || event.keyCode\r\n\r\n            // Undo Redo keys stuff\r\n            const ctrl = event.ctrlKey ? event.ctrlKey : ((key === 17)  ? true : false)\r\n            const shift = event.shiftKey ? event.shiftKey : ((key === 16)  ? true : false)\r\n            const meta = event.metaKey ? event.metaKey : ((key === 91)  ? true : false)\r\n            \r\n            if ((ctrl && !shift && key === 90) || (meta && !shift && key === 90) || (key === 90)) {\r\n                undo()\r\n                return\r\n            }\r\n\r\n            if ((ctrl && key === 89) || (ctrl && shift && key === 90) || (meta && key === 89) || (meta && shift && key === 90) || (key === 89) || (shift && key === 90)) {\r\n                redo()\r\n                return\r\n            }\r\n\r\n            // Tools on number keys stuff\r\n            switch (key) {\r\n                case 49 || 96:\r\n                    setActiveTool(Brush)\r\n                    break\r\n                case 50 || 97:\r\n                    setActiveTool(Eraser)\r\n                    break\r\n                case 51 || 98:\r\n                    setActiveTool(Line)\r\n                    break\r\n                case 52 || 99:\r\n                    setActiveTool(Triangle)\r\n                    break \r\n                case 53 || 100:\r\n                    setActiveTool(Rectangle)\r\n                    break\r\n                case 54 || 101:\r\n                    setActiveTool(Circle)\r\n                    break\r\n                case 55 || 102:\r\n                    setActiveTool(Fill)\r\n                    break\r\n                case 56 || 103:\r\n                    setActiveTool(ColorPicker)\r\n                    break\r\n                default :\r\n                    break\r\n            }\r\n        }\r\n\r\n        if (!workspaceRef.current) return\r\n        const workspaceElement = workspaceRef.current\r\n\r\n        workspaceElement.addEventListener(\"wheel\", handleMouseWheel)\r\n        workspaceElement.addEventListener(\"mousemove\", handleMouseMove)\r\n        \r\n        document.addEventListener(\"keydown\", handleKeys)\r\n\r\n        return () => {\r\n            workspaceElement.removeEventListener(\"wheel\", handleMouseWheel)\r\n            workspaceElement.removeEventListener(\"mousemove\", handleMouseMove)\r\n\r\n            document.removeEventListener(\"keydown\", handleKeys)\r\n        }\r\n    }, [workspaceRef, width, height, setScale, setCanvasX, setCanvasY, undo, redo, setActiveTool])\r\n\r\n    const render = function() {\r\n        return (\r\n            <div className=\"workspace\" id=\"workspace\" ref={workspaceRef}>\r\n                <div style={{\r\n                    position: \"relative\",\r\n                    left: canvasX,\r\n                    top: canvasY\r\n                }}>\r\n                    <PixelCanvas/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return render()\r\n}","import React from \"react\"\r\nimport \"./StatusBar.css\"\r\n\r\nimport ColoredSquare from \"../common/ColoredSquare/ColoredSquare\"\r\n\r\nimport {useBrushColor} from \"../../hooks/useBrushColor\"\r\nimport {useActiveTool} from \"../../hooks/useActiveTool\"\r\nimport {useLayers} from \"../../hooks/useLayers\"\r\nimport {useProjectSettings} from \"../../hooks/useProjectSettings\"\r\n\r\nexport default function StatusBar() {\r\n    \r\n    const {activeTool, toolStatus} = useActiveTool()\r\n    const {brushColor} = useBrushColor()\r\n    const {activeLayer} = useLayers()\r\n    const {canvasCursorPosition} = useProjectSettings()\r\n\r\n    const render = function() {\r\n        return (\r\n            <div className=\"statusBar\">\r\n                <p>\r\n                    <span>\r\n                        Color:\r\n                    </span>\r\n                    <ColoredSquare color={brushColor}/>\r\n                    <span>\r\n                        rgba({brushColor.r}, {brushColor.g}, {brushColor.b}, {brushColor.a})\r\n                        | Active Layer: {activeLayer?.name}\r\n                        | Cursor Position: ({(canvasCursorPosition.x)}, {canvasCursorPosition.y})\r\n                        | Tool: {activeTool.renderIcon()}{activeTool?.name ?? \"none\"}\r\n                    </span>\r\n                </p>\r\n                <p>\r\n                    {toolStatus}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return render()\r\n}","import {React, useEffect, useRef} from \"react\"\r\nimport Helmet from \"react-helmet\"\r\nimport './App.css'\r\n// import NavBar from \"./components/NavBar/NavBar\"\r\nimport ToolBox from \"./components/ToolBox/ToolBox\"\r\nimport ProjectOptions from \"./components/ProjectOptions/ProjectOptions\"\r\nimport Workspace from \"./components/Workspace/Workspace\"\r\nimport StatusBar from \"./components/StatusBar/StatusBar\"\r\n\r\nimport {BrushColorProvider} from \"./hooks/useBrushColor\"\r\nimport {ActiveToolProvider} from \"./hooks/useActiveTool\"\r\nimport {LayersProvider, useLayers} from \"./hooks/useLayers\"\r\nimport {ProjectSettingsProvider, useProjectSettings} from \"./hooks/useProjectSettings\"\r\nimport { HistoryProvider, useHistory } from \"./hooks/useHistory\"\r\n\r\n\r\nfunction App() {\r\n\tconst {width, height, scale} = useProjectSettings()\r\n\tconst {pushEntryToHistory} = useHistory()\r\n\tconst {layers} = useLayers()\r\n\r\n\tconst isHistoryInitialised = useRef(false)\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('contextmenu', function(e) {e.preventDefault()}, false)\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n        if (!isHistoryInitialised.current && layers.length > 0) {\r\n\t\t\tpushEntryToHistory()\r\n\t\t\tisHistoryInitialised.current = true\r\n\t\t}\r\n    }, [layers, pushEntryToHistory])\r\n\t\r\n  \tconst render = function() {\r\n    \treturn (\r\n      \t\t<div className=\"App\">\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>pxl.it</title>\r\n\t\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\r\n\t\t\t\t</Helmet>\r\n\r\n\t\t\t\t{/* <NavBar/> */}\r\n\t\t\t\t<div className=\"editor\">\r\n\t\t\t\t\t<ToolBox/>\r\n\t\t\t\t\t<Workspace\r\n\t\t\t\t\t\twidth={width}\r\n\t\t\t\t\t\theight={height}\r\n\t\t\t\t\t\tscale={scale}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ProjectOptions/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<StatusBar/>\r\n      \t\t</div>\r\n    \t)\r\n  \t}\r\n  \treturn render()\r\n}\r\n\r\nexport default function AppWithContext() {\r\n\treturn (\r\n\t\t<ActiveToolProvider>\r\n\t\t\t<BrushColorProvider>\r\n\t\t\t\t<LayersProvider>\r\n\t\t\t\t\t<ProjectSettingsProvider>\r\n\t\t\t\t\t\t<HistoryProvider>\r\n\t\t\t\t\t\t\t<App/>\r\n\t\t\t\t\t\t</HistoryProvider>\r\n\t\t\t\t\t</ProjectSettingsProvider>\r\n\t\t\t\t</LayersProvider>\r\n\t\t\t</BrushColorProvider>\r\n\t\t</ActiveToolProvider>\r\n\t)\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n"],"sourceRoot":""}